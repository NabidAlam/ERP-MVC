@model ERP.MODEL.ProductModel
@using System.Linq
@using ERP.MODEL


@{
    ViewBag.Title = "Product Details";
}

<style>
    .field-validation-error, label.error {
        color: red;
    }

    .input-validation-error, input.error {
        border: 2px solid red;
    }
</style>

<div class="col-md-12">
    @using (Html.BeginForm("SaveProductDetails", "ProductDetails", FormMethod.Post, new { @class = "form-horizontal product-datils-form", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(c => c.ProductImageBytes)
        @Html.HiddenFor(c => c.MeasurmentSheetBytes)
        <div class="panel panel-card margin-b-30">
            <div class="panel-heading panel-heading-custom">
                <h4 class="panel-title">PRODUCT DETAILS</h4>
            </div>
            <div class="panel-body">
                @if (!string.IsNullOrWhiteSpace(ViewBag.RequiredMessage))
                {

                    <div class="row alert alert-danger alert-dismissable alert-custom">
                        <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                        <span class="success-msg text-center">@ViewBag.RequiredMessage</span>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(ViewBag.InformationMessage))
                {

                    <div class="row alert alert-success alert-dismissable alert-custom">
                        <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                        <span class="success-msg text-center">@ViewBag.InformationMessage</span>
                    </div>
                }

                <div class="row alert alert-success alert-dismissable alert-custom sizeRatioDeleteMsg" style="display: none;">
                    <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                    <span class="success-msg text-center"></span>
                </div>

                <div class="row">
                    <div class="col-lg-4 col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.SeasonName, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.SeasonName, ViewBag.SeasonDDList as SelectList, new { @class = "form-control custom-select-box valrequired", @autofocus = true })
                                @Html.ValidationMessageFor(m => m.SeasonName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.SeasonYear, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.TextBoxFor(m => m.SeasonYear, new { @class = "form-control valrequired", @autofocus = true, @placeholder = DateTime.Now.Year })
                                @Html.ValidationMessageFor(m => m.SeasonYear, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.StyleNumber, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.TextBoxFor(m => m.StyleNumber, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Style Number" })
                                @Html.ValidationMessageFor(m => m.StyleNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.StyleDescription, new {@class = "col-lg-4 control-label"})
                            <div class="col-lg-7">
                                @Html.TextBoxFor(m => m.StyleDescription, new {@class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Style Description"})
                                @Html.ValidationMessageFor(m => m.StyleDescription, "", new {@class = "text-danger"})
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Occasion, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.Occasion, ViewBag.OccasionDDList as SelectList, new { @class = "form-control custom-select-box", @autofocus = true })
                                @Html.ValidationMessageFor(m => m.Occasion, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Image, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                <div class="fileUpload btn btn-sm btn-primary btn-image">
                                    <span><i class="fa fa-picture-o"></i> Specification Sheet</span>
                                    @Html.TextBoxFor(m => m.Image, "", new { @type = "file", @class = "imageUpload", @value = Model.Image })<br />
                                    @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })

                                </div>
                                <span class="required">*</span>
                            </div>
                        </div>

                    </div>

                    <div class="col-lg-4 col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.SampleSize, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.SampleSize, ViewBag.SizeDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.SampleSize, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.SampleFit, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.SampleFit, ViewBag.FitDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.SampleFit, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Catagory, new {@class = "col-lg-4 control-label"})
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.Catagory, ViewBag.CategoryDDList as SelectList, new {@class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.Catagory, "", new {@class = "text-danger"})
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        @if (Model.Catagory != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(m => m.SubCatagory, new { @class = "col-lg-4 control-label" })
                                <div class="col-lg-7">
                                    @Html.DropDownListFor(m => m.SubCatagory, ViewBag.SubCategoryDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                    @Html.ValidationMessageFor(m => m.SubCatagory, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-1">
                                    <span class="required">*</span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(m => m.SubCatagory, new { @class = "col-lg-4 control-label" })
                                <div class="col-lg-7">
                                    @Html.DropDownListFor(m => m.SubCatagory, new SelectList(" "), "--select sub catagory--", new { @class = "form-control custom-select-box valrequired" })
                                    @Html.ValidationMessageFor(m => m.SubCatagory, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-1">
                                    <span class="required">*</span>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(m => m.Month, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.Month, ViewBag.MonthDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.Month, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ProductionQuantity, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.TextBoxFor(m => m.ProductionQuantity, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Production Quantity " })
                                @Html.ValidationMessageFor(m => m.ProductionQuantity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ShopDisplayDate, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.EditorFor(m => m.ShopDisplayDate, new { htmlAttributes = new { @class = "form-control datepicker valrequired", @autofocus = true, @placeholder = "Enter Shop Display Date " } })
                                @Html.ValidationMessageFor(m => m.ShopDisplayDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.MerchandiserName, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.MerchandiserName, ViewBag.MerchandiserNameDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.MerchandiserName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.WashType, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                @Html.DropDownListFor(m => m.WashType, ViewBag.WashIdDDList as SelectList, new { @class = "form-control custom-select-box valrequired" })
                                @Html.ValidationMessageFor(m => m.WashType, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-1">
                                <span class="required">*</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.MeasurmentSheet, new { @class = "col-lg-4 control-label" })
                            <div class="col-lg-7">
                                <div class="fileUpload btn btn-sm btn-primary btn-image">
                                    <span><i class="fa fa-picture-o"></i> Choose Measurment Sheet</span>
                                    @Html.TextBoxFor(m => m.MeasurmentSheet, "", new {@type = "file", @class = "imageUpload", @value = Model.MeasurmentSheet})<br />
                                    @Html.ValidationMessageFor(m => m.MeasurmentSheet, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <span class="required">*</span>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-card margin-b-30">
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-3 col-md-12">
                        <p class="font-weight-bold">Size Ratio :</p>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-custom">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="checkbox" class="allBomGridCheck">
                                        </th>
                                        <th>Size Name</th>
                                        <th>Size Value</th>
                                        <th class="hidden"></th>
                                    </tr>
                                </thead>
                                <tbody class="BomGridContent" id="bomBody">
                                @if (Model.SizeRatioDisplays.Any())
                                {
                                    foreach (var data in Model.SizeRatioDisplays)
                                    {
                                        <tr class="BomGridFields">
                                            <td><input type="checkbox" class="singleBomGridCheck"></td>
                                            <td>
                                                @Html.DropDownListFor(m => m.SizeName, new SelectList(ViewBag.SizeDDList, "Value", "Text", @data.SizeName), new { @class = "form-control custom-select-box valrequired"})
                                                @Html.ValidationMessageFor(m => m.SizeName, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.SizeValue, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Fabric Code", @Value = data.SizeValue})
                                                @Html.ValidationMessageFor(m => m.SizeValue, "", new { @class = "text-danger" })
                                            </td>
                                            <td class="hidden">
                                                @Html.TextBoxFor(m => m.SizeId)
                                                @Html.HiddenFor(m => m.TranIdSr, new { @Value = data.TranId, @class = "trnIdVal"})
                                                @Html.HiddenFor(m => m.StyleNumber, new { @Value = data.StyleNo, @class = "styleNoVal"})
                                                @Html.HiddenFor(m => m.SeasonYear, new { @Value = data.SeasonYear, @class = "StyleYearVal"})
                                                @Html.HiddenFor(m => m.SeasonName, new { @Value = data.SeasonId, @class = "SeasonIdVal"})
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr class="BomGridFields">
                                        <td><input type="checkbox" class="singleBomGridCheck"></td>
                                        <td>
                                            @Html.DropDownListFor(m => m.SizeName, ViewBag.SizeDDList as SelectList, new { @class = "form-control custom-select-box valrequired"})
                                            @Html.ValidationMessageFor(m => m.SizeName, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.SizeValue, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Size Value"})
                                            @Html.ValidationMessageFor(m => m.SizeValue, "", new { @class = "text-danger" })
                                        </td>
                                        <td class="hidden">
                                            @Html.HiddenFor(m => m.SizeId)
                                            @Html.HiddenFor(m => m.TranIdSr)
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-right">
                            <button class="btn btn-md btn-success btn-save addBomGridBtn" type="button">
                                <i class="fa fa-plus"></i> Add Row
                            </button>

                            <button class="btn btn-md btn-danger btn-save deleteBomGridBtn" type="button">
                                <i class="fa fa-minus"></i> Delete Row
                            </button>
                        </div>
                    </div>
                    <div class="col-lg-9 col-md-12">
                        <p class="font-weight-bold">Colorway :</p>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-custom">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="checkbox" class="allCwGridCheck">
                                        </th>
                                        <th style="width: 11%">Color Way Number</th>
                                        <th style="width: 11%">Color Way Name</th>
                                        <th style="width: 11%">Color Way Type</th>
                                        <th style="width: 11%">Color Name</th>
                                        <th style="width: 11%">Fabric Name</th>
                                        <th style="width: 11%">Fabric Code</th>
                                        <th style="width: 11%">Suppplier Name</th>
                                        <th style="width: 11%">Consumption</th>
                                        <th style="width: 11%">Fabric Swatch</th>
                                        <th class="hidden"></th>
                                    </tr>
                                </thead>
                                <tbody class="CwGridContent" id="cwBody">
                                @if (Model.ColorWayDisplays.Any())
                                {
                                    foreach (var data in Model.ColorWayDisplays)
                                    {
                                        <tr class="CwGridFields text-center">
                                            <td><input type="checkbox" class="singleCwGridCheck"></td>
                                            <td>
                                                @Html.DropDownListFor(m => m.ColorWayNumber, new SelectList(ViewBag.ColorWayNumberDDList, "Value", "Text", @data.ColorWayNumber), new {@class = "form-control custom-select-box valrequired", required = true})
                                                @Html.ValidationMessageFor(m => m.ColorWayNumber, "", new {@class = "text-danger"})
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.ColorWayName, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Color Way Name", @Value = data.ColorWayName, required = true })
                                                @Html.ValidationMessageFor(m => m.ColorWayName, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.ColorWayType, new SelectList(ViewBag.ColorWayTypeDDList, "Value", "Text", @data.ColorWayType), new { @class = "form-control custom-select-box valrequired", required = true })
                                                @Html.ValidationMessageFor(m => m.ColorWayType, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.ColorName, new SelectList(ViewBag.ColorDDList, "Value", "Text", @data.ColorName), new { @class = "form-control custom-select-box valrequired", required = true })
                                                @Html.ValidationMessageFor(m => m.ColorName, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.FabricName, new SelectList(ViewBag.FabricDDList, "Value", "Text", @data.FabricName), new { @class = "form-control custom-select-box valrequired", required = true })
                                                @Html.ValidationMessageFor(m => m.FabricName, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.FabricCode, new {@class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Fabric Code", @Value = data.FabricCode, required = true})
                                                @Html.ValidationMessageFor(m => m.FabricCode, "", new {@class = "text-danger"})
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.Supplyer, new SelectList(ViewBag.SupplirDDList, "Value", "Text", @data.Supplyer), new { @class = "form-control custom-select-box valrequired", required = true })
                                                @Html.ValidationMessageFor(m => m.Supplyer, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.Consumption, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Consumption Value", @Value = data.Consumption, required = true })
                                                @Html.ValidationMessageFor(m => m.Consumption, "", new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                <div class="show-imagesw-div">
                                                    <img id="showImageSw" class="show-prev-img" src="@data.FabricSwatch" style="width: 100%; height: 100%;">
                                                </div>
                                                <div class="fileUploadsw btn btn-sm btn-primary btn-imagesw">
                                                    <span><i class="fa fa-picture-o"></i> Choose Image</span>
                                                    @Html.TextBoxFor(m => m.FabricSwatches, "", new { @type = "file", @class = "imageUploadsw", @onchange = "imageUploadSw(event)", value = data.PhotoString})<br />
                                                    @Html.ValidationMessageFor(m => m.FabricSwatches, "", new { @class = "text-danger" })

                                                </div>
                                            </td>
                                            <td class="hidden">
                                                @Html.TextBoxFor(m => m.ColorWayId)
                                                @Html.HiddenFor(m => m.TranId, new { @Value = data.TranId, @class = "trnIdVal" })
                                                @Html.HiddenFor(c => c.FabricSwatch, new { @Value = data.PhotoString })
                                                @Html.HiddenFor(m => m.StyleNumber, new { @Value = data.StyleNo, @class = "styleNoVal" })
                                                @Html.HiddenFor(m => m.SeasonYear, new { @Value = data.SeasonYear, @class = "StyleYearVal" })
                                                @Html.HiddenFor(m => m.SeasonName, new { @Value = data.SeasonId, @class = "SeasonIdVal" })
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr class="CwGridFields text-center">
                                        <td><input type="checkbox" class="singleCwGridCheck"></td>
                                        <td>
                                            @Html.DropDownListFor(m => m.ColorWayNumber, ViewBag.ColorWayNumberDDList as SelectList, new {@class = "form-control custom-select-box valrequired", required = true})
                                            @Html.ValidationMessageFor(m => m.ColorWayNumber, "", new {@class = "text-danger"})
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.ColorWayName, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Color Way Name" })
                                            @Html.ValidationMessageFor(m => m.ColorWayName, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => m.ColorWayType, ViewBag.ColorWayTypeDDList as SelectList, new { @class = "form-control custom-select-box valrequired", required = true })
                                            @Html.ValidationMessageFor(m => m.ColorWayType, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => m.ColorName, ViewBag.ColorDDList as SelectList, new { @class = "form-control custom-select-box valrequired", required = true })
                                            @Html.ValidationMessageFor(m => m.ColorName, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => m.FabricName, ViewBag.FabricDDList as SelectList, new { @class = "form-control custom-select-box valrequired", required = true })
                                            @Html.ValidationMessageFor(m => m.FabricName, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.FabricCode, new {@class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Fabric Code", required = true})
                                            @Html.ValidationMessageFor(m => m.FabricCode, "", new {@class = "text-danger"})
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => m.Supplyer, ViewBag.SupplirDDList as SelectList, new { @class = "form-control custom-select-box valrequired", required = true })
                                            @Html.ValidationMessageFor(m => m.Supplyer, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.Consumption, new { @class = "form-control valrequired", @autofocus = true, @placeholder = "Enter Consumption Value", required = true })
                                            @Html.ValidationMessageFor(m => m.Consumption, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            <div class="show-imagesw-div">
                                                <img id="showImageSw" class="show-prev-img" style="width: 100%; height: 100%;">
                                            </div>
                                            <div class="fileUploadsw btn btn-sm btn-primary btn-imagesw">
                                                <span><i class="fa fa-picture-o"></i> Choose Image</span>
                                                @Html.TextBoxFor(m => m.FabricSwatches, "", new { @type = "file", @class = "imageUploadsw", @onchange = "imageUploadSw(event)"})<br />
                                                @Html.ValidationMessageFor(m => m.FabricSwatches, "", new { @class = "text-danger" })

                                            </div>
                                        </td>
                                        <td class="hidden">
                                            @Html.TextBoxFor(m => m.ColorWayId)
                                            @Html.HiddenFor(m => m.TranId)
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-right">
                            <button class="btn btn-md btn-success btn-save addCwGridBtn" type="button">
                                <i class="fa fa-plus"></i> Add Row
                            </button>

                            <button class="btn btn-md btn-danger btn-save deleteCwGridBtn" type="button">
                                <i class="fa fa-minus"></i> Delete Row
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row text-center">
                    <button class="btn btn-md btn-primary btn-save btn-submit" type="submit">
                        <i class="fa fa-save"></i> Save
                    </button>

                    <a href="@Url.Action("Index", "ProductDetails")" class="btn btn-md btn-warning btn-clear">
                        <i class="fa fa-circle-o-notch"></i> Clear
                    </a>
                </div>
            </div>
        </div>
        <div class="panel panel-card margin-b-30">
            <div class="panel-heading panel-heading-custom">
                <h4 class="panel-title">PRODUCT RECORD</h4>
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    @if (Model.ViewProducts.Any())
                    {
                        <table class="table table-bordered table-hover table-striped">
                            <thead>
                                <tr>
                                    <td>Season Name</td>
                                    <td>Season Year</td>
                                    <td>Style Number</td>
                                    <td>Style Description</td>
                                    <td>Month</td>
                                    <td>Production Quantity</td>
                                    <td>Merchandiser Name</td>
                                    <td>Designer Name</td>
                                    <td> </td>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var data in Model.ViewProducts)
                            {
                            <tr>
                                <td>@data.SeasonName</td>
                                <td>@data.SeasonYear</td>
                                <td>@data.StyleNumber</td>
                                <td>@data.StyleDescription</td>
                                <td>@data.Month</td>
                                <td>@data.ProductionQuantity</td>
                                <td>@data.MerchandiserName</td>
                                <td>@data.DesignerName</td>
                                <td class="text-center">
                                    @Html.ActionLink(" Edit", "Index", "ProductDetails", new { seasonId = data.SeasonId, seasonYear = data.SeasonYear, styleNumber = data.StyleNumber }, new { @class = " btn btn-info fa fa-edit" }) ||
                                    @Html.ActionLink(" Report", "ProductDetailsReport", "ProductDetails", new {seasonId = data.SeasonId, seasonYear = data.SeasonYear, styleNumber = data.StyleNumber}, new {@class = " btn btn-info fa fa-edit", target = "_blank"}) ||
                                    @Html.ActionLink(" Specification Sheet", "DisplaySpecificationSheet", "ProductDetails", new { seasonId = data.SeasonId, seasonYear = data.SeasonYear, styleNumber = data.StyleNumber }, new { @class = " btn btn-info fa fa-edit", target = "_blank" })
                                </td>
                            </tr>
                            }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h4 class="text-center">No Record Found!!!</h4>
                    }
                </div>
            </div>
        </div>
    }

    @section Scripts {
      
        <script>
            $(document).ready(function() {
                $(document).on('click', '.btn-submit', function (e) {
                    e.preventDefault();
                    $('.valrequired ').each(function () {
                        if (!$(this).hasClass('input-validation-error') && !$(this).val()) {
                            $(this).addClass('input-validation-error');
                        }
                    });
                    var empty = $('.valrequired ').filter(function () {
                        return this.value === "";
                    });
                    if (!empty.length) {
                        $('.product-datils-form').submit();
                    }
                });
                
            });
            var imageUpload = function(event) {
                var output = document.getElementById('showImage');
                output.src = URL.createObjectURL(event.target.files[0]);
            };

            $(document).on('change', '.imageUploadsw', function() {
                newReadURL(this);
            });

            function newReadURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $(input).parents('.fileUploadsw').siblings('.show-imagesw-div').find('.show-prev-img').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            //Add & Delete Bom Grid Details Field 
            $(document).on('click', '.addBomGridBtn', function() {
                var markUp = $('.BomGridFields:eq( 0 )').clone();
                $('.BomGridContent').append(markUp).find(".BomGridFields:eq( -1 ) input[type='text'], hidden,.BomGridFields:eq( -1 ) select option:contains('Please select one')").val('').prop('selected', true);
                //$('.BomGridContent').append(markUp).find(".BomGridFields:eq( -1 ) input[type='text'], hidden,select");
                var rowNumber = $('#bomBody tr').length;
                $('#RowNumber').val(rowNumber);
            });

            $(document).on('click', '.deleteBomGridBtn', function() {
                if (confirm('Are you sure to delete this record?') == true) {
                    var transId = [];
                    var styleNoVal = [];
                    var styleYearVal = [];
                    var seasonIdVal = [];
                    $('.BomGridContent input:checkbox:checked').each(function() {
                        if ($('.allBomGridCheck').is(':checked')) {
                            var oldValue = $(this).parents('.BomGridFields').find('.BomGridFields:eq( -1 ) input[type="text"]').val();
                            $(this).parents('.BomGridContent').find('.BomGridFields:gt( 0 )').remove();
                            $('input[type="checkbox"]').prop('checked', false);
                        } else {
                            var oldValue = $(this).parents('.BomGridFields').find('.BomGridFields:eq( -1 ) input[type="text"]').val();
                            $(this).parents('.BomGridFields').remove();
                            $(this).parents('.BomGridContent').find('.BomGridFields:gt( 0 )').remove();
                        }
                        var trnId = $(this).parents('.BomGridFields').find('.trnIdVal').val();
                        var stlNo = $(this).parents('.BomGridFields').find('.styleNoVal').val();
                        var stlYr = $(this).parents('.BomGridFields').find('.StyleYearVal').val();
                        var seasnId = $(this).parents('.BomGridFields').find('.SeasonIdVal').val();
                        if (trnId) {
                            transId.push(trnId);
                        }
                        if (stlNo) {
                            styleNoVal.push(stlNo);
                        }
                        if (stlYr) {
                            styleYearVal.push(stlYr);
                        }
                        if (seasnId) {
                            seasonIdVal.push(seasnId);
                        }

                    });
                    if (transId.length && styleNoVal.length && styleYearVal.length && seasonIdVal.length) {
                        $.ajax({
                            type: "POST",
                            url: "/ProductDetails/DeleteSizeRatio",
                            data: { TranId: transId, StyleNo: styleNoVal, SeasonYear: styleYearVal, SeasonId: seasonIdVal },
                            success: function(data) {
                                $('.sizeRatioDeleteMsg').css('display', 'block');
                                $('.success-msg').text(data);
                                $("#bomBody").load(" #bomBody > *");
                            }
                        });
                    }
                }
            });

            $(document).on('click', '.allBomGridCheck', function() {
                if (this.checked) {
                    $('.BomGridContent input:checkbox').prop('checked', true);
                } else {
                    $('.BomGridContent input:checkbox').prop('checked', false);
                }
            });

            $(document).on('click', '.singleBomGridCheck', function() {
                if ($('.singleBomGridCheck:checked').length == $('.singleBomGridCheck').length) {
                    $('.allBomGridCheck:checkbox').prop('checked', true);
                } else {
                    $('.allBomGridCheck:checkbox').prop('checked', false);
                }

            });

            //Add & Delete Cw Grid Details Field
            $(document).on('click', '.addCwGridBtn', function() {
                var markUp = $('.CwGridFields:eq( 0 )').clone();
                $('.CwGridContent').append(markUp).find(".CwGridFields:eq( -1 ) input[type='text'], .CwGridFields:eq( -1 ) input[type='hidden'], .CwGridFields:eq( -1 ) input[type='file'] , .CwGridFields:eq( -1 ) img, .CwGridFields:eq( -1 ) select option:contains('Please select one')").val("").prop('selected', true).removeAttr('src');
                var rowNumber = $('#cwBody tr').length;
                $('#RowNumber').val(rowNumber);
            });

            $(document).on('click', '.deleteCwGridBtn', function() {
                if (confirm('Are you sure to delete this record?') == true) {
                    var transId = [];
                    var styleNoVal = [];
                    var styleYearVal = [];
                    var seasonIdVal = [];
                    $('.CwGridContent input:checkbox:checked').each(function() {
                        if ($('.allCwGridCheck').is(':checked')) {
                            var oldValue = $(this).parents('.CwGridFields').find('.CwGridFields:eq( -1 ) input[type="text"]').val();
                            $(this).parents('.CwGridContent').find('.CwGridFields:gt( 0 )').remove();
                            $('input[type="checkbox"]').prop('checked', false);
                        } else {
                            var oldValue = $(this).parents('.CwGridFields').find('.CwGridFields:eq( -1 ) input[type="text"]').val();
                            $(this).parents('.CwGridFields').remove();
                            $(this).parents('.CwGridContent').find('.CwGridFields:gt( 0 )').remove();
                        }
                        var trnId = $(this).parents('.CwGridFields').find('.trnIdVal').val();
                        var stlNo = $(this).parents('.CwGridFields').find('.styleNoVal').val();
                        var stlYr = $(this).parents('.CwGridFields').find('.StyleYearVal').val();
                        var seasnId = $(this).parents('.CwGridFields').find('.SeasonIdVal').val();
                        if (trnId) {
                            transId.push(trnId);
                        }
                        if (stlNo) {
                            styleNoVal.push(stlNo);
                        }
                        if (stlYr) {
                            styleYearVal.push(stlYr);
                        }
                        if (seasnId) {
                            seasonIdVal.push(seasnId);
                        }
                    });
                    if (transId.length && styleNoVal.length && styleYearVal.length && seasonIdVal.length) {
                        $.ajax({
                            type: "POST",
                            url: "/ProductDetails/DeleteColorWay",
                            data: { TranId: transId, StyleNo: styleNoVal, SeasonYear: styleYearVal, SeasonId: seasonIdVal },
                            success: function(data) {
                                $('.sizeRatioDeleteMsg').css('display', 'block');
                                $('.success-msg').text(data);
                                $("#cwBody").load(" #cwBody > *");
                            }
                        });
                    }
                }
            });

            $(document).on('click', '.allCwGridCheck', function() {
                if (this.checked) {
                    $('.CwGridContent input:checkbox').prop('checked', true);
                } else {
                    $('.CwGridContent input:checkbox').prop('checked', false);
                }
            });

            $(document).on('click', '.singleCwGridCheck', function() {
                if ($('.singleCwGridCheck:checked').length == $('.singleCwGridCheck').length) {
                    $('.allCwGridCheck:checkbox').prop('checked', true);
                } else {
                    $('.allCwGridCheck:checkbox').prop('checked', false);
                }

            });

            $(document).ready(function() {
                $("#Catagory").change(function() {
                    $.get("/ProductDetails/GetSubCatagory", { categoryId: $("#Catagory").val() }, function(data) {
                        $("#SubCatagory").empty();
                        $.each(data, function(index, row) {
                            $("#SubCatagory").append("<option value='" + row.Value + "'>" + row.Text + "</option>");
                        });

                    });

                });
            });

            $('.field-validation-error').html("");
        </script>
    }
</div>
