@model EmployeeEarnLeaveModel
@using ERP.MODEL

@{
    ViewBag.Title = "Attendance Approval";

    string vMessage = "";
    if (TempData.ContainsKey("OperationMessage"))
    {
        vMessage = TempData["OperationMessage"].ToString();
        <script type="text/javascript">
            window.onload = function () {

                alert('@TempData["OperationMessage"]');
            };
        </script>

    }

    var vDate = DateTime.Now.Year;
}


@using (Html.BeginForm("EmployeeEarnLeave", "Salary", FormMethod.Post, new { @class = "form-horizontal mb", role = "form", id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()

    <div class="col-md-12">
        <div class="panel panel-card margin-b-30">
            <div class="panel-heading panel-heading-custom">
                <h4 class="panel-title">EMPLOYEE EARN LEAVE</h4>
                <span class="pull-right" style="position: relative; top: -20px">
                    <label>
                        <input type="radio" name="ReportType" value="PDF" checked="checked"> PDF
                    </label> ||
                    <label>
                        <input type="radio" name="ReportType" value="Excel"> Excel
                    </label>
                </span>
            </div>
            @if (!string.IsNullOrWhiteSpace(vMessage))
            {

                <div class="row alert alert-success alert-dismissable alert-custom">
                    <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                    <span class="success-msg">@vMessage</span>
                </div>
            }



            <div class="row">
                <div class="col-md-9">
                    <div class="panel  panel-default">
                        <div class="panel-body" style="padding: 24px;">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmployeeId, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", @placeholder = "Enter employee id" })
                                        @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmployeeName, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @placeholder = "Enter employee name" })
                                        @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmployeeCard, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @Html.TextBoxFor(m => m.EmployeeCard, new { @class = "form-control", @placeholder = "Enter employee card no" })
                                        @Html.ValidationMessageFor(m => m.EmployeeCard, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(m => m.UnitId, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @Html.DropDownListFor(m => m.UnitId, ViewBag.UnitDDList as SelectList, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.UnitId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.DepartmentId, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @if (ViewBag.DepartmentDDList != null)
                                        {
                                            @Html.DropDownListFor(m => m.DepartmentId, ViewBag.DepartmentDDList as SelectList, new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.DepartmentId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                        }
                                        @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-1">
                                        <i id="deptLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SectionId, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @(ViewBag.SectionDDList != null ? Html.DropDownListFor(m => m.SectionId, ViewBag.SectionDDList as SelectList, new { @class = "form-control" }) : Html.DropDownListFor(m => m.SectionId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" }))
                                        @Html.ValidationMessageFor(m => m.SectionId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-1">
                                        <i id="sectionLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SubSectionId, new { @class = "col-lg-4 control-label" })
                                    <div class="col-lg-7">
                                        @if (ViewBag.SubSectionDDList != null)
                                        {
                                            @Html.DropDownListFor(m => m.SubSectionId, ViewBag.SubSectionDDList as SelectList, new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.SubSectionId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                        }
                                        @Html.ValidationMessageFor(m => m.SubSectionId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-1">
                                        <i id="subSectionLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="panel  panel-default">
                        <div class="panel-body" style="padding: 24px;">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SalaryYear, new { @class = "col-lg-4 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.SalaryYear, new
                               {
                                   @class = "form-control",
                                   @placeholder = "Enter year"@*,@Value = @vDate*@})
                                    @Html.ValidationMessageFor(m => m.SalaryYear, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.Date, new { @class = "col-lg-4 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.Date, new { @class = "form-control", @placeholder = "Enter date" })
                                    @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            @*----------buttons-------------*@
            <div class="row">
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">

                        <button class="btn btn-md  btn-info btnSearch" type="submit">
                            <i class="fa fa-info"></i> Search
                        </button>

                        <button class="btn btn-md btn-primary btn-save btnManualSearch" type="submit" formaction=@Url.Action("SaveEmployeeEarnLeave", "Salary")>
                            <i class="fa fa-plus-circle"></i> Save
                        </button>

                        <button class="btn btn-md  btn-success" type="submit" formaction=@Url.Action("ProcessEmployeeEarnLeave", "Salary")>
                            <i class="fa fa-circle-o-notch"></i> Process
                        </button>

                        <button class="btn btn-default btnEarnLeaveReport" type="submit" formtarget = "_blank" formaction=@Url.Action("EarnLeaveReport", "Report")>
                            <i class="fa fa-file-pdf-o" style="color: red"></i> &nbsp;View
                        </button>
                        
                        @*<input type="submit" value="Confirmed" name="Capture" class="button" @Html.ActionLink("","EarnLeaveReport", "Report", new { target = "_blank" }) />*@                        

                        @*<button class="btn btn-default btnEarnLeaveReport" formmethod="post" onClick="window.open('/Report/EarnLeaveReport', '_blank')">
                            <i class="fa fa-file-pdf-o" style="color: red"></i> &nbsp;View
                        </button>*@
                        
                    </div>
                </div>

                @*----------buttons end-------------*@
            </div>
        </div>
    </div>



    <div class="col-md-12">
        <div class="panel panel-card margin-b-30">
            <div class="panel-body">
                <div class="row">
                    <div class="table-responsive">
                        <table id="tableJD" class="table table-bordered table-striped table-custom">
                            <thead>
                                <tr>

                                    <th>SL</th>
                                    <th>ID</th>
                                    <th>NAME</th>
                                    <th>JOINING DATE</th>
                                    <th>DESIGNATION</th>
                                    <th>DAY</th>
                                    <th>AMOUNT</th>
                                </tr>
                            </thead>
                            <tbody class="jd-Table-Content">
                                @{
                                    for (int i = 0; i < Model.EmployeeEarnLeaveList.Count; i++)
                                    {
                                        <tr class="jd-data">

                                            @Html.HiddenFor(m => m.EmployeeEarnLeaveList[i].EmployeeId)
                                            <td> @Model.EmployeeEarnLeaveList[i].SerialNumber </td>
                                            <td> @Model.EmployeeEarnLeaveList[i].EmployeeId</td>
                                            <td> @Model.EmployeeEarnLeaveList[i].EmployeeName </td>
                                            <td> @Model.EmployeeEarnLeaveList[i].DesignationName</td>
                                            <td> @Model.EmployeeEarnLeaveList[i].DepartmentName</td>
                                            <td> @Html.TextBoxFor(m => m.EmployeeEarnLeaveList[i].EarnLeaveDay, new { @class = "form-control", @Value = @Model.EmployeeEarnLeaveList[i].EarnLeaveDay }) </td>
                                            <td> @Model.EmployeeEarnLeaveList[i].Amount</td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>

                    @Model.EmployeeEarnLeaveList.Count() Employees
                </div>
            </div>
        </div>
    </div>

                                    }


@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>

        $(document).ready(function () {


            //$(document).on('click', '.btnEarnLeaveReport', function (e) {
            //    e.preventDefault();

            //    var formAction = '';

            //    if ($(e.target).hasClass('btnManualSearch')) {
            //        $('.mb').removeAttr('target');
            //        formAction = $(this).add('.btnEarnLeaveReport').attr('formaction');
            //        console.log(formAction);
            //    }
               
            //    //else {
            //    //    formAction = $(this).add('.btnIndividualReport').attr('formaction');
            //    //}

            //    if ($(e.target).hasClass('btnManualSearch')) {
            //        $(".mb").attr({
            //            'target': '_self',
            //            'action': formAction
            //        });
            //    } else {
            //        $(".mb").attr({
            //            'target': '_blank',
            //            'action': formAction
            //        });
            //    }


            //    $(".mb").submit();
            //    $('.mb').removeAttr('target');

            //});



            var vForm = $('#__AjaxAntiForgeryForm');
            var vToken = $('input[name="__RequestVerificationToken"]', vForm).val();


            $('#UnitId').change(function () {

                $('#DepartmentId').empty();
                $('#SectionId').empty();
                $('#SubSectionId').empty();

                var vUnitId = $('#UnitId').val();

                if (vUnitId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetDepartmentDDLByUnitId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pUnitId: vUnitId
                        },
                        beforeSend: function () {
                            $('#deptLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#DepartmentId")
                                        .append('<option value=' + value.DepartmentId + '>' + value.DepartmentName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#deptLoader').hide();
                        }
                    });
                }
            });


            $('#DepartmentId').change(function () {

                $('#SectionId').empty();
                $('#SubSectionId').empty();

                var vDepartmentId = $('#DepartmentId').val();

                if (vDepartmentId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSectionDDLByDepartmentId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pDepartmentId: vDepartmentId
                        },
                        beforeSend: function () {
                            $('#sectionLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#SectionId").append('<option value=' + value.SectionId + '>' + value.SectionName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#sectionLoader').hide();
                        }
                    });
                }
            });


            $('#SectionId').change(function () {

                $('#SubSectionId').empty();

                var vSectionId = $('#SectionId').val();

                if (vSectionId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSubSectionDDLBySectionId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pSectionId: vSectionId
                        },
                        beforeSend: function () {
                            $('#subSectionLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#SubSectionId")
                                        .append('<option value=' + value.SubSectionId + '>' + value.SubSectionName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#subSectionLoader').hide();
                        }
                    });
                }
            });

        });

    </script>
}

