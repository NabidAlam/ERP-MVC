@model AssignEmployeeShiftModel
@using ERP.MODEL

@{
    ViewBag.Title = "Assign Shift";

    string vMessage = "";
    if (TempData.ContainsKey("OperationMessage"))
    {
        vMessage = TempData["OperationMessage"].ToString();
    }
}
@using (Html.BeginForm("DisplayAssignedEmployee", "Attendance", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()

    <div class="col-md-12">
        <div class="panel panel-card margin-b-30">
            <div class="panel-heading panel-heading-custom">
                <h4 class="panel-title">ASSIGN EMPLOYEE SHIFT</h4>
            </div>
            @if (!string.IsNullOrWhiteSpace(vMessage))
            {

                <div class="row alert alert-success alert-dismissable alert-custom">
                    <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                    <span class="success-msg">@vMessage</span>
                </div>
            }

            <div class="row">

                <div class="col-md-12">

                    <div class="panel panel-default" style="padding: 24px">

                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EmployeeId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", @autofocus = true, @placeholder = "Enter employee id" })
                                            @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UnitId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @Html.DropDownListFor(m => m.UnitId, ViewBag.UnitDDList as SelectList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.UnitId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DepartmentId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @if (ViewBag.DepartmentDDList != null)
                                            {
                                                @Html.DropDownListFor(m => m.DepartmentId, ViewBag.DepartmentDDList as SelectList, new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => m.DepartmentId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                            }
                                            @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-1">
                                            <i id="deptLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SectionId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @(ViewBag.SectionDDList != null ? Html.DropDownListFor(m => m.SectionId, ViewBag.SectionDDList as SelectList, new { @class = "form-control" }) : Html.DropDownListFor(m => m.SectionId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" }))
                                            @Html.ValidationMessageFor(m => m.SectionId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-1">
                                            <i id="sectionLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SubSectionId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @if (ViewBag.SubSectionDDList != null)
                                            {
                                                @Html.DropDownListFor(m => m.SubSectionId, ViewBag.SubSectionDDList as SelectList, new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => m.SubSectionId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                            }
                                            @Html.ValidationMessageFor(m => m.SubSectionId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-1">
                                            <i id="subSectionLoader" class="fa fa-refresh fa-spin fa-2x" style="position: relative; top: 5px; left: 5px; display: none"></i>
                                        </div>
                                    </div>
                                    @*<div class="form-group">
                                            @Html.LabelFor(m => m.FirstDate, new { @class = "col-lg-4 control-label" })
                                            <div class="col-lg-7">
                                                @Html.TextBoxFor(m => m.FirstDate, new { @class = "form-control datepicker", @autofocus = false, @placeholder = "Enter to-date" })
                                                @Html.ValidationMessageFor(m => m.FirstDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LastDate, new { @class = "col-lg-4 control-label" })
                                            <div class="col-lg-7">
                                                @Html.TextBoxFor(m => m.LastDate, new { @class = "form-control datepicker", @placeholder = "Enter from-date" })
                                                @Html.ValidationMessageFor(m => m.LastDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShiftTypeId, new { @class = "col-lg-4 control-label" })
                                        <div class="col-lg-7">
                                            @Html.DropDownListFor(m => m.ShiftTypeId, ViewBag.ShiftTypeDDList as SelectList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ShiftTypeId, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-lg-offset-2 col-lg-5">
                                    <button id="btnEmployeeSearch" class="btn btn-md btn-info" type="submit">
                                        <i class="fa fa-search"></i> Search
                                    </button>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>



            </div>

        </div>
    </div>

    <div class="col-md-12">
        <div class="panel panel-card margin-b-30">
            <div style="font-size: 20px; text-align: right"> @Model.AssignEmployeeShiftList.Count Employees</div>
            <div class="panel-body">

                <div class="row">
                    <div class="table-responsive">
                        <table id="tableAssignShift" class="table table-bordered table-striped table-custom">
                            <thead>
                                <tr>
                                    @*<th><input class="selectAllEmployeeGridCheck" type="checkbox" /></th>*@
                                    <th>Serial</th>
                                    <th>ID</th>
                                    <th>NAME</th>
                                    <th>JOINING DATE</th>
                                    <th>DESIGNATION</th>
                                    <th>DEPARTMENT</th>
                                    <th>Log Date</th>
                                    <th>Shift</th>
                                    @*<th>UNIT</th>
                                        <th>SECTION</th>
                                        <th>SUB-SECTION</th>
                                        <th>GRADE</th>*@
                                    <th>ACTIVE</th>
                                    <th>IMAGE</th>
                                </tr>
                            </thead>
                            <tbody class="jd-Table-Content">
                                @{

                                    for (int i = 0; i < Model.AssignEmployeeShiftList.Count; i++)
                                    {
                                        <tr>
                                            @Html.HiddenFor(m => m.AssignEmployeeShiftList[i].EmployeeId)
                                            @*<td> @Html.CheckBoxFor(m => m.AssignEmployeeShiftList[i].IsChecked, new { @class = "singleEmployeeGridChecked" })</td>*@
                                            <td> @Model.AssignEmployeeShiftList[i].SerialNumber </td>
                                            <td> @Model.AssignEmployeeShiftList[i].EmployeeId </td>
                                            <td> @Model.AssignEmployeeShiftList[i].EmployeeName </td>
                                            <td> @Model.AssignEmployeeShiftList[i].JoiningDate </td>
                                            <td> @Model.AssignEmployeeShiftList[i].DesignationName</td>
                                            @*<td> @Model.AssignEmployeeShiftList[i].UnitName</td>*@
                                            <td> @Model.AssignEmployeeShiftList[i].DepartmentName</td>
                                            @*<td> @Model.AssignEmployeeShiftList[i].SectionName</td>*@
                                            @*<td> @Model.AssignEmployeeShiftList[i].SubSectionName</td>*@
                                            @*<td> @Model.AssignEmployeeShiftList[i].EmployeeGrade</td>*@
                                            <td>@Model.AssignEmployeeShiftList[i].LogDate</td>
                                            <td>@Model.AssignEmployeeShiftList[i].ShiftTypeName</td>
                                            <td> @Model.AssignEmployeeShiftList[i].ActiveStatus</td>
                                            <td><img class="media-object img-circle" src="data:image/JPG;base64,@Convert.ToBase64String( @Model.AssignEmployeeShiftList[i].EmpoyeeImage)" alt="no picture" data-src="holder.js/150x150" style="width: 20px; height: 20px;"></td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(document).ready(function () {

            $(document).on('click', '.singleEmployeeGridChecked, .selectAllEmployeeGridCheck', function () {

                if ($(event.target).hasClass('selectAllEmployeeGridCheck')) {
                    if ($(this).is(':checked')) {
                        $('.singleEmployeeGridChecked').prop('checked', true);
                    } else {
                        $('.singleEmployeeGridChecked').prop('checked', false);
                    }
                }
            });


            @* Cascading Dropdown start *@


            var vForm = $('#__AjaxAntiForgeryForm');
            var vToken = $('input[name="__RequestVerificationToken"]', vForm).val();

            $('#UnitId').change(function () {

                $('#DepartmentId').empty();
                $('#SectionId').empty();
                $('#SubSectionId').empty();

                var vUnitId = $('#UnitId').val();

                if (vUnitId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetDepartmentDDLByUnitId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pUnitId: vUnitId
                        },
                        beforeSend: function () {
                            $('#deptLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#DepartmentId")
                                        .append('<option value=' + value.DepartmentId + '>' + value.DepartmentName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#deptLoader').hide();
                        }
                    });
                }
            });


            $('#DepartmentId').change(function () {

                $('#SectionId').empty();
                $('#SubSectionId').empty();

                var vDepartmentId = $('#DepartmentId').val();

                if (vDepartmentId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSectionDDLByDepartmentId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pDepartmentId: vDepartmentId
                        },
                        beforeSend: function () {
                            $('#sectionLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#SectionId").append('<option value=' + value.SectionId + '>' + value.SectionName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#sectionLoader').hide();
                        }
                    });
                }
            });


            $('#SectionId').change(function () {

                $('#SubSectionId').empty();

                var vSectionId = $('#SectionId').val();

                if (vSectionId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSubSectionDDLBySectionId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pSectionId: vSectionId
                        },
                        beforeSend: function () {
                            $('#subSectionLoader').show();
                        },
                        success: function (data) {
                            $.each(data,
                                function (key, value) {
                                    $("#SubSectionId")
                                        .append('<option value=' + value.SubSectionId + '>' + value.SubSectionName + '</option>');
                                });
                        },
                        complete: function () {
                            $('#subSectionLoader').hide();
                        }
                    });
                }
            });


            @* Cascading Dropdown end *@

            @*  //table check*@


        });


    </script>
}