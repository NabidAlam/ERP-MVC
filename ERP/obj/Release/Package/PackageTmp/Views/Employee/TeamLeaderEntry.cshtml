
@model TeamLeaderModel
@using PagedList
@using ERP.MODEL
@using PagedList.Mvc


@{
    ViewBag.Title = "Team Leader Entry";
    IPagedList<TeamLeaderModel> teamLeader = ViewBag.TeamLeaderList;

    string vMessage = "";
    if (TempData.ContainsKey("OperationMessage"))
    {
        //vMessage = TempData["OperationMessage"].ToString();
        <script type="text/javascript">
            window.onload = function () {

                alert('@TempData["OperationMessage"]');
            };
        </script>
    }

}


<div class="col-md-12">
    <div class="panel panel-card margin-b-30">
        <div class="panel-heading panel-heading-custom">
            <h4 class="panel-title">TEAM LEADER ENTRY</h4>
        </div>
        @if (!string.IsNullOrWhiteSpace(vMessage))
            {
            <div class="row alert alert-success alert-dismissable alert-custom">
                <button aria-hidden="true" data-dismiss="alert" class="close close-custom" type="button">×</button>
                <span class="success-msg">@vMessage</span>
            </div>
        }

        <div class="panel-body">
            @using (Html.BeginForm("TeamLeaderEntry", "Employee", FormMethod.Post, new { @class = "form-horizontal ajaxAntiForgeryForm", @style = "border: 1px solid #777;padding: 50px 20px 20px 10px;", role = "form" }))
            {



                <div class="form-group">

                    @Html.LabelFor(m => m.EmployeeId, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", @autofocus = true, @placeholder = "Enter employee ID" })
                    </div>

                    @Html.LabelFor(m => m.EmployeeName, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @autofocus = true, @placeholder = "Enter employee name" })
                    </div>

                    @Html.LabelFor(m => m.CardNo, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control", @autofocus = true, @placeholder = "Enter card no" })
                    </div>


                </div>


                <div class="form-group">

                    @Html.LabelFor(m => m.UnitId, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @Html.DropDownListFor(m => m.UnitId, ViewBag.UnitDDList as SelectList, new { @class = "form-control custom-select-box" })
                    </div>

                    @Html.LabelFor(m => m.DepartmentId, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @(ViewBag.DepartmentDDList != null ? Html.DropDownListFor(m => m.DepartmentId, ViewBag.DepartmentDDList as SelectList, new { @class = "form-control", @autofocus = true }) : Html.DropDownListFor(m => m.DepartmentId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" }))
                    </div>


                    @Html.LabelFor(m => m.SectionId, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-3">
                        @(ViewBag.SectionDDList != null ? Html.DropDownListFor(m => m.SectionId, ViewBag.SectionDDList as SelectList, new { @class = "form-control", @autofocus = true }) : Html.DropDownListFor(m => m.SectionId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" }))
                    </div>


                </div>



                <div class="form-group">

                    @Html.LabelFor(m => m.SubSectionId, new {@class = "col-lg-1 control-label"})
                    <div class="col-lg-3">
                        @(ViewBag.SubSectionDDList != null ? Html.DropDownListFor(m => m.SubSectionId, ViewBag.SubSectionDDList as SelectList, new {@class = "form-control", @autofocus = true}) : Html.DropDownListFor(m => m.SubSectionId, Enumerable.Empty<SelectListItem>(), new {@class = "form-control"}))
                    </div>



                    @Html.LabelFor(m => m.PunchCode, new {@class = "col-lg-1 control-label"})
                    <div class="col-lg-3">
                        @Html.TextBoxFor(m => m.PunchCode, new {@class = "form-control", @autofocus = true, @placeholder = "Enter punch code"})
                    </div>



                    @Html.HiddenFor(m => m.Flag, new {@Value = "1"})
                    @Html.AntiForgeryToken()
                    <div class="col-lg-3 col-lg-offset-1">
                        <button class="btn btn-md btn-info btn-search" type="submit">
                            <i class="fa fa-search"></i> Search
                        </button>
                        <a href="@Url.Action("ClearTeamLeaderEntry", "Employee")" class="btn btn-md btn-warning btn-clear">
                            <i class="fa fa-circle-o-notch"></i> Clear
                        </a>
                    </div>
                </div>



            
     
               
            }


            @using (Html.BeginForm("TeamLeaderSave", "Employee", FormMethod.Post, new {@style = "margin-top: 20px;"}))
            {
                @Html.AntiForgeryToken()
                <button class="btn btn-md btn-success btnSave" type="submit" disabled="disabled" style="">
                    <i class="fa fa-save"></i> Save
                </button>




                if (Model.EmployeeList != null)
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-custom">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" class="allIdCardCheck">
                                    </th>
                                    <th>SL</th>
                                    <th width="20%">Id</th>
                                    <th>Name</th>
                                    <th>Joining Date</th>
                                    <th>Designation</th>
                                    <th>Unit</th>
                                    <th>Department</th>
                                    <th>Section</th>
                                    <th>Sub Section</th>
                                    <th>Status</th>
                                    <th>Photo</th>
                                </tr>
                            </thead>
                            <tbody class="IdCardGridContent">



                                @for (int i = 0; i < Model.EmployeeList.Count; i++)

                                {

                                    <tr>
                                        <td>
                                            @Html.CheckBoxFor(m => m.EmployeeList[i].IsChecked, new { @class = "singleIdCardCheck" })
                                        </td>
                                        <td>@Model.EmployeeList[i].SerialNumber</td>
                                        <td>@Model.EmployeeList[i].EmployeeId</td>
                                        <td>@Model.EmployeeList[i].EmployeeName</td>
                                        <td>@Model.EmployeeList[i].JoiningDate</td>
                                        <td>@Model.EmployeeList[i].PresentDesignationName</td>
                                        <td>@Model.EmployeeList[i].UnitName</td>
                                        <td>@Model.EmployeeList[i].DepartmentName</td>
                                        <td>@Model.EmployeeList[i].SectionName</td>
                                        <td>@Model.EmployeeList[i].SubSectionName</td>

                                   
                                        <td>
                                            @if (Model.EmployeeList[i].Status == "ACTIVE")
                                            {
                                                <span class="text-success">@Model.EmployeeList[i].Status</span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">@Model.EmployeeList[i].Status</span>
                                            }
                                        </td>
                                        <td>
                                            <img src="@Model.EmployeeList[i].ImageFileNameBase64" style="width: 50px; height: 50px; cursor: pointer; border: 1px solid #ddd; padding: 1px;">
                                        </td>
                                        @Html.HiddenFor(m => m.EmployeeList[i].EmployeeId, new { @Value = Model.EmployeeList[i].EmployeeId })
                                    </tr>
                                }
                            
                            </tbody>
                        </table>

                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="col-md-12">

    <div class="panel panel-card margin-b-30">
        <div class="panel-heading panel-heading-custom">
            <span class="panel-title">TEAM LEADER RECORD</span>
        </div>

        <div class="panel-body">


            @using (Html.BeginForm("TeamLeaderEntry", "Employee", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.TextBoxFor(m => m.SearchBy, new { @id = "SearchBy", @class = "form-control search-by", @placeholder = "Enter employee ID or name & then press enter" })
            }

            <div class="table-responsive">
                <table class="table table-bordered table-striped table-custom">
                    <thead>
                        <tr>
                            <th>Serial</th>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Joining Date</th>
                            <th>Designation</th>
                            <th>Unit</th>
                            <th>Department</th>
                            <th>Section</th>
                            <th>Sub Section</th>
                            <th>Status</th>
                            <th>Photo</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var leader in teamLeader)
                            {
                                <tr>
                                    <td>@leader.SerialNumber</td>
                                    <td>@leader.EmployeeId</td>
                                    <td>@leader.EmployeeName</td>
                                    <td>@leader.JoiningDate</td>
                                    <td>@leader.PresentDesignationName</td>
                                    <td>@leader.UnitName</td>
                                    <td>@leader.DepartmentName</td>
                                    <td>@leader.SectionName</td>
                                    <td>@leader.SubSectionName</td>
                                    <td>
                                        @if (leader.Status == "ACTIVE")
                                        {
                                            <span class="text-success">@leader.Status</span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">@leader.Status</span>
                                        }
                                    </td>

                                    <td>
                                        @if (Model != null && !String.IsNullOrEmpty(leader.ImageFileNameBase64))
                                        {
                                            <img style="width: 50px; height: 50px; cursor: pointer; border: 1px solid #ddd; padding: 1px;" src="@leader.ImageFileNameBase64">
                                        }
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>

                <span class="page-info">
                    Page @(teamLeader.PageCount < teamLeader.PageNumber ? 0 : teamLeader.PageNumber) of @teamLeader.PageCount
                </span>
                <span class="showing-info">
                    Showing @teamLeader.FirstItemOnPage to @teamLeader.LastItemOnPage of @teamLeader.TotalItemCount Team Leader Record
                </span>
                @Html.PagedListPager(teamLeader, page => Url.Action("TeamLeaderEntry", new { page, pageSize = teamLeader.PageSize, SearchBy = ViewBag.searchValue }))


            </div>
        </div>
    </div>
</div>







<style>
    .ui-autocomplete {
        max-height: 180px !important;
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#EmployeeId').autocomplete({
                source: '@Url.Action("EmployeeIdAutocomplete")'
            });

            $(document).on('click', '.allIdCardCheck', function () {
                if (this.checked) {
                    $('.IdCardGridContent input:checkbox').prop('checked', true);
                } else {
                    $('.IdCardGridContent input:checkbox').prop('checked', false);
                }
            });
            $(document).on('click', '.singleIdCardCheck', function () {
                if ($('.singleIdCardCheck:checked').length == $('.singleIdCardCheck').length) {
                    $('.allIdCardCheck:checkbox').prop('checked', true);
                } else {
                    $('.allIdCardCheck:checkbox').prop('checked', false);
                }

            });
            $(document).on('click', '.allIdCardCheck, .singleIdCardCheck', function (event) {
                if ($(event.target).is(':checked')) {
                    $('.btnSave').prop('disabled', false);
                }
                if ($('.singleIdCardCheck').length == $('.singleIdCardCheck:checkbox:not(":checked")').length) {
                    $('.btnSave').prop('disabled', true);
                }
            });
        
        });


        var vForm = $('.ajaxAntiForgeryForm');
        var vToken = $('input[name="__RequestVerificationToken"]', vForm).val();












        //unit, department, section & subsection
        $(document).ready(function ($) {

            $('#UnitId').change(function () {

                $('#DepartmentId').empty();
                $('#SectionId').empty();
                $('#SubSectionId').empty();


                var vUnitId = $('#UnitId').val();

                if (vUnitId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetDepartmentDdlByUnitId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pUnitId: vUnitId
                        },
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#DepartmentId").append('<option value=' + value.DepartmentId + '>' + value.DepartmentName + '</option>');
                            });
                        }
                    });
                }
            });


            $('#DepartmentId').change(function () {

                $('#SectionId').empty();
                $('#SubSectionId').empty();

                var vDepartmentId = $('#DepartmentId').val();

                if (vDepartmentId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSectionDDLByDepartmentId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pDepartmentId: vDepartmentId
                        },
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#SectionId").append('<option value=' + value.SectionId + '>' + value.SectionName + '</option>');
                            });
                        }
                    });
                }
            });


            $('#SectionId').change(function () {

                $('#SubSectionId').empty();

                var vSectionId = $('#SectionId').val();

                if (vSectionId) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSubSectionDDLBySectionId", "LookUp")',
                        data: {
                            __RequestVerificationToken: vToken,
                            pSectionId: vSectionId
                        },
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#SubSectionId").append('<option value=' + value.SubSectionId + '>' + value.SubSectionName + '</option>');
                            });
                        }
                    });
                }
            });

        });
    </script>
}


